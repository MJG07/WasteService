/* Generated by AN DISI Unibo */ 
package it.unibo.transporttrolley

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Transporttrolley ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "idle"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("idle") { //this:State
					action { //it:State
					}
					 transition(edgeName="t1",targetState="pickup",cond=whenRequest("pickup"))
				}	 
				state("pickup") { //this:State
					action { //it:State
						answer("pickup", "executeaction", "executeaction(done)"   )  
					}
					 transition(edgeName="t2",targetState="deposit",cond=whenRequest("deposit"))
				}	 
				state("deposit") { //this:State
					action { //it:State
						answer("deposit", "executeaction", "executeaction(done)"   )  
					}
					 transition(edgeName="t3",targetState="pickup",cond=whenRequest("pickup"))
					transition(edgeName="t4",targetState="home",cond=whenRequest("home"))
				}	 
				state("home") { //this:State
					action { //it:State
						answer("home", "executeaction", "executeaction(done)"   )  
					}
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
			}
		}
}
